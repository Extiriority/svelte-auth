import { w as writable, S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, o as onMount, t as text, c as claim_text, a as insert_dev, b as set_data_dev, n as noop, e as detach_dev } from './client.8d487085.js';

const authenticated = writable(false);

/* src/routes/index.svelte generated by Svelte v3.35.0 */

function create_fragment(ctx) {
	let t;

	const block = {
		c: function create() {
			t = text(/*message*/ ctx[0]);
		},
		l: function claim(nodes) {
			t = claim_text(nodes, /*message*/ ctx[0]);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*message*/ 1) set_data_dev(t, /*message*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);
	let message = "";

	onMount(async () => {
		const response = await fetch("http://localhost:8000/api/user", {
			headers: { "Content-Type": "application/json" },
			credentials: "include"
		});

		const content = await response.json();
		$$invalidate(0, message = `Hi ${content.name}`);
		authenticated.set(true);
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ onMount, authenticated, message });

	$$self.$inject_state = $$props => {
		if ("message" in $$props) $$invalidate(0, message = $$props.message);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [message];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguYTFhMGY5YjMuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdG9yZXMvYXV0aC5qcyIsIi4uLy4uLy4uL3NyYy9yb3V0ZXMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7d3JpdGFibGV9IGZyb20gXCJzdmVsdGUvc3RvcmVcIjtcblxuZXhwb3J0IGNvbnN0IGF1dGhlbnRpY2F0ZWQgPSB3cml0YWJsZShmYWxzZSk7XG4iLCI8c2NyaXB0PlxuICAgIGltcG9ydCB7b25Nb3VudH0gZnJvbSAnc3ZlbHRlJztcbiAgICBpbXBvcnQge2F1dGhlbnRpY2F0ZWR9IGZyb20gJy4uL3N0b3Jlcy9hdXRoJztcblxuICAgIGxldCBtZXNzYWdlID0gJydcblxuICAgIG9uTW91bnQoYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL3VzZXInLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ30sXG4gICAgICAgICAgICBjcmVkZW50aWFsczogJ2luY2x1ZGUnLFxuICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCBjb250ZW50ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gICAgICAgIG1lc3NhZ2UgPSBgSGkgJHtjb250ZW50Lm5hbWV9YDtcbiAgICAgICAgYXV0aGVudGljYXRlZC5zZXQodHJ1ZSk7XG4gICAgfSk7XG48L3NjcmlwdD5cblxue21lc3NhZ2V9XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFTyxNQUFNLGFBQWEsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDOzs7Ozs7Ozs7d0JDaUIzQyxHQUFPOzs7cUNBQVAsR0FBTzs7Ozs7OzBEQUFQLEdBQU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBZkEsT0FBTyxHQUFHLEVBQUU7O0NBRWhCLE9BQU87UUFDRyxRQUFRLFNBQVMsS0FBSyxDQUFDLGdDQUFnQztHQUN6RCxPQUFPLElBQUcsY0FBYyxFQUFFLGtCQUFrQjtHQUM1QyxXQUFXLEVBQUUsU0FBUzs7O1FBR3BCLE9BQU8sU0FBUyxRQUFRLENBQUMsSUFBSTtrQkFFbkMsT0FBTyxTQUFTLE9BQU8sQ0FBQyxJQUFJO0VBQzVCLGFBQWEsQ0FBQyxHQUFHLENBQUMsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
